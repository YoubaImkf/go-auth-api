name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      smtp:
        image: maildev/maildev
        ports:
          - 1025:1025
          - 1080:1080

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.24

      - name: Install dependencies
        run: go mod download

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U ${{ secrets.DATABASE_USER }} && exit 0
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
          exit 1
        env:
          PGPASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        
      - name: Create test database
        run: |
          PGPASSWORD=${{ secrets.DATABASE_PASSWORD }} createdb -h localhost -U ${{ secrets.DATABASE_USER }} go-auth-db-test

      - name: Run tests
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: go-auth-db-test
          SMTP_HOST: smtp
          SMTP_PORT: 1025
        run: go test ./test/...

      - name: Build Docker image üê≥
        run: docker build -t go-auth-api .