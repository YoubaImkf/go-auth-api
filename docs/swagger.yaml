basePath: /03622bf7-d58b-4997-965c-14ee58c63554/api/v1
definitions:
  dto.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  dto.LoginRequest:
    properties:
      identifier:
        type: string
      password:
        type: string
    required:
    - identifier
    - password
    type: object
  dto.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.RegisterRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      user_name:
        type: string
    required:
    - confirm_password
    - email
    - first_name
    - last_name
    - password
    - user_name
    type: object
  dto.RegisterResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.ResetPasswordRequest:
    properties:
      confirm_password:
        type: string
      new_password:
        minLength: 8
        type: string
      token:
        type: string
    required:
    - confirm_password
    - new_password
    - token
    type: object
  dto.UserResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      user_name:
        type: string
    required:
    - first_name
    - last_name
    type: object
  model.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user_name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A JWT Authentication Service API
  title: Authentication API
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Request a password reset
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Forgot password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Logout user
      tags:
      - auth
  /auth/me:
    get:
      description: Get the profile of the logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponse'
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
      summary: Register user
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset the user's password
      parameters:
      - description: Reset Password
        in: body
        name: resetPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Reset password
      tags:
      - auth
  /health:
    get:
      description: Check the health of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health Check
      tags:
      - health
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get all users
      tags:
      - user
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
